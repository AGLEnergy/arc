{
    "definitions": {},
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "http://example.com/example.json",
    "items": {
        "$id": "http://example.com/example.json/items",
        "type": "object",
        "properties": {
            "id": {
                "$id": "http://example.com/example.json/items/properties/id",
                "type": "string",
                "title": "id",
                "description": "Field unique identifier (GUID).",
                "default": "",
                "examples": [
                    "8275594c-6177-475e-b462-5f15d015df7c"
                ]
            },
            "name": {
                "$id": "http://example.com/example.json/items/properties/name",
                "type": "string",
                "title": "name",
                "description": "The name of the field.",
                "default": "",
                "examples": [
                    "first_name",
                    "last_name"
                ]
            },
            "description": {
                "$id": "http://example.com/example.json/items/properties/description",
                "type": "string",
                "title": "description",
                "description": "A description of the what the field represents.",
                "default": "",
                "examples": [
                    "Customer First Name",
                    "Timestamp of last customer interaction."
                ]
            },
            "nullReplacementValue": {
                "$id": "http://example.com/example.json/items/properties/nullReplacementValue",
                "type": "string",
                "title": "nullReplacementValue",
                "description": "The value to replace any nulls with.",
                "default": "",
                "examples": [
                    "true"
                ]
            },
            "trim": {
                "$id": "http://example.com/example.json/items/properties/trim",
                "type": "boolean",
                "title": "trim",
                "description": "Whether to trim this field before attempting data type conversion.",
                "default": false,
                "examples": [
                    true,
                    false
                ]
            },
            "nullable": {
                "$id": "http://example.com/example.json/items/properties/nullable",
                "type": "boolean",
                "title": "nullable",
                "description": "Whether this field is allowed to be null.",
                "default": false,
                "examples": [
                    true,
                    false
                ]
            },
            "nullableValues": {
                "$id": "http://example.com/example.json/items/properties/nullableValues",
                "type": "array",
                "title": "nullableValues",
                "description": "A list of values which will be treated as valid null values.",
                "examples": [
                    "NULL",
                    "null",
                    ""
                ],
                "items": {
                    "$id": "http://example.com/example.json/items/properties/nullableValues/items",
                    "type": "string",
                    "title": "The 0 Schema.",
                    "description": "An explanation about the purpose of this instance.",
                    "default": "",
                    "examples": [
                        ""
                    ]
                }
            },
            "primaryKey": {
                "$id": "http://example.com/example.json/items/properties/primaryKey",
                "type": "boolean",
                "title": "primaryKey",
                "description": "A flag to indicate if this is a primary key for metadata tracking/validation purposes.",
                "default": false,
                "examples": [
                    true,
                    false
                ]
            },
            "type": {
                "$id": "http://example.com/example.json/items/properties/type",
                "type": "string",
                "enum": [
                    "date",
                    "decimal",
                    "integer",
                    "string",
                    "timestamp",
                    "boolean"
                ],
                "title": "type",
                "description": "The data type of this field.",
                "default": "",
                "examples": [
                    "date",
                    "decimal",
                    "integer",
                    "string",
                    "timestamp"
                ]
            },
            "length": {
                "$id": "http://example.com/example.json/items/properties/length",
                "type": "integer",
                "title": "length",
                "description": "The length of the field for metadata tracking/validation purposes.",
                "examples": [
                    6,
                    255
                ]
            },
            "precision": {
                "$id": "http://example.com/example.json/items/properties/precision",
                "type": "integer",
                "title": "precision",
                "description": "Precision of Decimal field. For example, the number 1234.567 has a precision of seven.",
                "minimum": 1,
                "examples": [
                    7
                ]
            },
            "scale": {
                "$id": "http://example.com/example.json/items/properties/scale",
                "type": "integer",
                "title": "scale",
                "description": "Scale of Decimal field. For example, the number 1234.567 has a scale of three.",
                "minimum": 0,
                "examples": [
                    3
                ]
            },
            "timezoneId": {
                "$id": "http://example.com/example.json/items/properties/timezoneId",
                "type": "string",
                "title": "timezoneId",
                "description": "The timezone (offset) used to parse timestamp.",
                "examples": [
                    "+1000",
                    "AEST",
                    "Sydney/Australia"
                ]
            },
            "formatters": {
                "$id": "http://example.com/example.json/items/properties/formatters",
                "type": "array",
                "title": "formatters",
                "description": "A list of formatters to attempt to convert a string to a timestamp. Order by most frequent value descending.",
                "examples": [
                    "dd/MM/yyyy HH:mm:ss",
                    "dd/MM/yyyy H:mm:ss",
                    "dd/MM/yyyy HH:mm",
                    "dd/MM/yyyy H:mm",
                    "d/MM/yyyy HH:mm:ss",
                    "d/MM/yyyy H:mm:ss",
                    "d/MM/yyyy HH:mm",
                    "d/MM/yyyy H:mm"
                ]
            },
            "table": {
                "$id": "http://example.com/example.json/items/properties/table",
                "type": "string",
                "title": "table",
                "description": "A source table name used for metadata tracking/validation purposes.",
                "default": "",
                "examples": [
                    "customer_details",
                    "transactions"
                ]
            },
            "trueValues": {
                "$id": "http://example.com/example.json/items/properties/trueValues",
                "type": "array",
                "title": "trueValues",
                "description": "A list of values which are considered as true. Try to order this list so the values are arranged from most frequent to least frequent.",
                "examples": [
                    "true",
                    "T",
                    "1"
                ]
            },
            "falseValues": {
                "$id": "http://example.com/example.json/items/properties/falseValues",
                "type": "array",
                "title": "falseValues",
                "description": "A list of values which are considered as false. Try to order this list so the values are arranged from most frequent to least frequent.",
                "examples": [
                    "false",
                    "F",
                    "0"
                ]
            },
            "metadata": {
                "$id": "http://example.com/example.json/items/properties/metadata",
                "type": "object",
                "title": "metadata",
                "description": "Any metadata to attach to the column."
            }
        },
        "allOf": [
            {
                "if": {
                    "properties": {
                        "type": {
                            "enum": [
                                "integer",
                                "long",
                                "string"
                            ]
                        }
                    }
                },
                "then": {
                    "required": [
                        "id",
                        "name",
                        "trim",
                        "nullable",
                        "type",
                        "nullableValues"
                    ]
                }
            },
            {
                "if": {
                    "properties": {
                        "type": {
                            "enum": [
                                "decimal"
                            ]
                        }
                    }
                },
                "then": {
                    "required": [
                        "id",
                        "name",
                        "trim",
                        "nullable",
                        "type",
                        "nullableValues",
                        "precision",
                        "scale"
                    ]
                }
            },
            {
                "if": {
                    "properties": {
                        "type": {
                            "enum": [
                                "timestamp"
                            ]
                        }
                    }
                },
                "then": {
                    "required": [
                        "id",
                        "name",
                        "trim",
                        "nullable",
                        "type",
                        "nullableValues",
                        "timezoneId",
                        "formatters"
                    ]
                }
            },
            {
                "if": {
                    "properties": {
                        "type": {
                            "enum": [
                                "date"
                            ]
                        }
                    }
                },
                "then": {
                    "required": [
                        "id",
                        "name",
                        "trim",
                        "nullable",
                        "type",
                        "nullableValues",
                        "formatters"
                    ]
                }
            },
            {
                "if": {
                    "properties": {
                        "type": {
                            "enum": [
                                "time"
                            ]
                        }
                    }
                },
                "then": {
                    "required": [
                        "id",
                        "name",
                        "trim",
                        "nullable",
                        "type",
                        "nullableValues",
                        "formatters"
                    ]
                }
            },
            {
                "if": {
                    "properties": {
                        "type": {
                            "enum": [
                                "boolean"
                            ]
                        }
                    }
                },
                "then": {
                    "required": [
                        "id",
                        "name",
                        "trim",
                        "nullable",
                        "type",
                        "nullableValues",
                        "trueValues",
                        "falseValues"
                    ]
                }
            }
        ],
        "additionalProperties": false
    }
}